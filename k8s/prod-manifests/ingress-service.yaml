apiVersion: v1
kind: Namespace
metadata:
  name: ns-posthub^^env^^
  labels:
    name: ns-posthub^^env^^

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: posthub-aks-ingress^^env^^
  namespace: ns-posthub^^env^^
  annotations:
    appgw.ingress.kubernetes.io/use-private-ip: "false"
    appgw.ingress.kubernetes.io/appgw-ssl-certificate: "cert-ns-posthub-dev-posthub-dev-sec"
    appgw.ingress.kubernetes.io/tls-redirect: "true"
    # cert-manager.k8s.io/cluster-issuer: letsencrypt-staging #change to prod after initial testing
    # cert-manager.k8s.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: azure/application-gateway
    cert-manager.io/issuer: letsencrypt-staging
    cert-manager.io/acme-challenge-type: http01
    acme.cert-manager.io/http01-edit-in-place: "true"
spec:
  tls:
    - hosts:
      - posthub^^env^^.40.112.137.156.nip.io
      secretName: posthub^^env^^-sec
  rules:
  - host: posthub^^env^^.40.112.137.156.nip.io
    http:
      paths:
      - path: /api/posthub
        backend:
          service:
            name: posthub-service^^env^^
            port:
              number: 3000
        pathType: Prefix
      - path: /api/posts
        backend:
          service:
            name: posts-service^^env^^
            port:
              number: 3000
        pathType: Prefix
      - path: /api/comments
        backend:
          service:
            name: comments-service^^env^^
            port:
              number: 3000
        pathType: Prefix
      - path: /api/users
        backend:
          service:
            name: users-service^^env^^
            port:
              number: 3000
        pathType: Prefix
      - path: /
        backend:
          service:
            name: ui-service^^env^^
            port:
              number: 3000
        pathType: Prefix